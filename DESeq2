#Make counts readable to DESeq2
library("magrittr")
counts <- read.table("~path:file.txt", header = TRUE)
row.names(counts) <- counts$Geneid
counts <- counts[ , -c(1:6)]
head(counts)
org_names <- names(counts)
names(counts) <- c("file1", "file2", "file3", "file4", "file5", "file6")
sample_info <- data.frame(condition = gsub( "_file[0-9]+", "", names(counts)), row.names = names(counts))




if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2", version = "3.8")


write.table(all_hisat_counts, file = "~path:file.txt", sep = "\t",
row.names = TRUE, col.names = NA)



library(DESeq2)
DESeq.ds <- DESeqDataSetFromMatrix(countData = counts, colData = sample_info, design = ~ condition)
colData(DESeq.ds) %>% head
assay(DESeq.ds) %>% head
rowRanges(DESeq.ds) %>% head
counts(DESeq.ds) %>% str
DESeq.ds <- DESeq.ds [ rowSums(counts(DESeq.ds)) > 0, ]
colSums(counts(DESeq.ds))
str(colData(DESeq.ds)$condition)
colData(DESeq.ds)$condition <- relevel(colData(DESeq.ds)$condition, "condition1")
str(colData(DESeq.ds)$condition)

DESeq.ds <- DESeq(DESeq.ds)
#set alpha as per filtering requirement
DGE.results <- results(DESeq.ds, independentFiltering = TRUE, alpha = 0.05)
summary(DGE.results)

par(mar=c(5,5,5,5), cex=1.0, cex.main=1.4, cex.axis=1.4, cex.lab=1.4)
topT <- as.data.frame(resultsObject)
#Adjusted P values (FDR Q values)
with(topT, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot", cex=1.0, xlab=bquote(~Log[2]~fold~change), ylab=bquote(~-log[10]~Q~value)))
with(subset(topT, padj<0.05 & abs(log2FoldChange)>2), points(log2FoldChange, -log10(padj), pch=20, col="red", cex=0.5))
#with(subset(topT, padj<0.05 & abs(log2FoldChange)>2), text(log2FoldChange, -log10(padj), labels=subset(rownames(topT), topT$padj<0.05 & abs(topT$log2FoldChange)>2), cex=0.8, pos=3))

#Add lines for absolute FC>2 and P-value cut-off at FDR Q<0.05
abline(v=0, col="black", lty=3, lwd=1.0)
abline(v=-2, col="black", lty=4, lwd=2.0)
abline(v=2, col="black", lty=4, lwd=2.0)
abline(h=-log10(max(topT$pvalue[topT$padj<0.05], na.rm=TRUE)), col="black", lty=4, lwd=2.0)
